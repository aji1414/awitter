{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Aweet.js","components/AweetStore.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Aweet","aweetObj","isOwner","editing","setEditing","text","newAweet","setNewAweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","AweetStore","userObj","aweet","setAweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","aweets","setAweets","useEffect","onSnapshot","snapshot","aweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e8ef0c2.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket:process.env.REACT_APP_STORAGE_BUCKET ,\r\n    messagingSenderId:process.env.REACT_APP_MESSAGIN_ID ,\r\n    appId:process.env.REACT_APP_APP_ID \r\n  };\r\n\r\n firebase.initializeApp(firebaseConfig);\r\n\r\n export const firebaseInstance = firebase;\r\n export const authService = firebase.auth();\r\n export const dbService = firebase.firestore();\r\n export const storageService = firebase.storage();","import React, {useState} from \"react\";\r\nimport {authService} from \"fbase\";\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n\r\n    const toggleAccount = () => setNewAccount(prev => !prev);\r\n\r\n\r\n    const onChange = event => {\r\n        const {target:{name, value}} = event;\r\n        if(name === \"email\"){\r\n            setEmail(value)\r\n        }\r\n        else if (name === \"password\"){\r\n            setPassword(value)\r\n        }\r\n    };\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccount){\r\n                // create account\r\n                data = await  authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            }\r\n            else{\r\n                // log in\r\n                data = await  authService.signInWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            }\r\n            console.log(data);\r\n        } \r\n        catch(error){\r\n            setError(error.message);\r\n        } \r\n    };\r\n\r\n    return(\r\n        <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n                <input \r\n                name=\"email\"\r\n                type=\"text\" \r\n                placeholder=\"Email\" \r\n                required \r\n                value={email}\r\n                onChange={onChange}\r\n                className=\"authInput\"\r\n                />\r\n\r\n                <input\r\n                name=\"password\" \r\n                type=\"password\" \r\n                placeholder=\"Password\" \r\n                required \r\n                value={password}\r\n                onChange={onChange}\r\n                className=\"authInput\"\r\n                />\r\n\r\n                <input  className=\"authInput authSubmit\" type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n            </form>\r\n            {error && <span className=\"authError\">{error}</span>}\r\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign In\" : \"Create Account\"}</span>\r\n            </>\r\n    )\r\n};\r\n\r\nexport default AuthForm;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Aweet = ({aweetObj, isOwner}) => {\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const [newAweet, setNewAweet] = useState(aweetObj.text);\r\n\r\n    const onDeleteClick = async() => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this aweet?\");\r\n        if(ok){\r\n            // delete aweet\r\n            await dbService.doc(`aweets/${aweetObj.id}`).delete();\r\n            await storageService.refFromURL(aweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing(prev => !prev);\r\n\r\n    const onSubmit = async event => {\r\n        event.preventDefault();\r\n        await dbService.doc(`aweets/${aweetObj.id}`).update({\r\n            text:newAweet\r\n        })\r\n        toggleEditing()\r\n    }\r\n\r\n    const onChange = event => {\r\n        const {target: {value}} = event;\r\n        setNewAweet(value);\r\n    }\r\n\r\n    return(\r\n        \r\n        <div className=\"nweet\">\r\n            {editing \r\n                ? \r\n                <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                    <input\r\n                    type=\"text\"\r\n                    placeholder={aweetObj.text} \r\n                    onChange={onChange}\r\n                    autoFocus\r\n                    value={newAweet}\r\n                    className=\"formInput\" \r\n                    required \r\n                    />\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                    </span> \r\n                    <input type=\"submit\" value=\"Update Aweet\" className=\"formBtn\" />\r\n                </form> \r\n                : \r\n                <>\r\n                <h4>{aweetObj.text}</h4>\r\n                    {aweetObj.attachmentUrl && <img src={aweetObj.attachmentUrl} />}\r\n                    {isOwner && \r\n                        <>\r\n                        <div class=\"nweet__actions\">\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                        </div>\r\n                        </>\r\n                    }\r\n                </>\r\n            }\r\n        </div>\r\n    ) \r\n};\r\n\r\nexport default Aweet;","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst AweetStore = ({ userObj }) => {\r\n  const [aweet, setAweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (aweet === \"\") {\r\n      return;\r\n    }\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const aweetObj = {\r\n      text: aweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"aweets\").add(aweetObj);\r\n    setAweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setAweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    if (Boolean(theFile)) {\r\n      reader.readAsDataURL(theFile);\r\n    }\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={aweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default AweetStore;","import React, { useEffect, useState } from \"react\";\r\nimport {authService, dbService, storageService} from \"fbase\";\r\nimport Aweet from \"components/Aweet\";\r\nimport AweetStore from \"components/AweetStore\";\r\n\r\nconst Home = ({userObj}) => {\r\n\r\n    const [aweets, setAweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"aweets\").onSnapshot(snapshot => {\r\n            const aweetArray = snapshot.docs.map(doc =>({id:doc.id, ...doc.data()}));\r\n            setAweets(aweetArray);\r\n        })\r\n    }, [])\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <AweetStore userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {aweets.map((aweet) => (\r\n                    <Aweet \r\n                    key={aweet.id} \r\n                    aweetObj={aweet}\r\n                    isOwner={aweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Navigation = ({userObj}) => {\r\n    return(\r\n    <nav>\r\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n            <li>\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link\r\n                    to=\"/profile\"\r\n                    style={{\r\n                        marginLeft: 10,\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        fontSize: 12,\r\n                    }}\r\n                    >\r\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                    <span style={{ marginTop: 10 }}>\r\n                        {userObj.displayName\r\n                        ? `${userObj.displayName}'s Profile`\r\n                        : \"Profile\"}\r\n                    </span>\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n    </nav>)\r\n};\r\n\r\nexport default Navigation;","import React, { useEffect, useState } from \"react\";\r\nimport {authService, dbService} from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\"; \r\n            \r\n\r\nconst Profile = ({refreshUser, userObj}) => {\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName)\r\n\r\n    let history = useHistory();\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    }\r\n\r\n    const onChange = event => {\r\n        const {target:{value}} = event;\r\n        setNewDisplayName(value);\r\n    }\r\n\r\n    const onSubmit = async event => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName:newDisplayName\r\n            })\r\n            refreshUser();\r\n        }\r\n    }\r\n\r\n      \r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input \r\n                onChange={onChange}\r\n                type=\"text\"\r\n                autoFocus \r\n                className=\"formInput\"\r\n                placeholder=\"Display name\" \r\n                value={newDisplayName}/>\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile Name\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>        \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => { \r\n    return(\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                <div\r\n                    style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 80,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                    }}\r\n                >\r\n                    <Route exact path=\"/\">\r\n                        <Home userObj={userObj} />\r\n                    </Route>\r\n                    <Route exact path=\"/profile\">\r\n                        <Profile refreshUser={refreshUser} userObj={userObj} />\r\n                    </Route>\r\n                </div>\r\n                ) : (\r\n                <>\r\n                <Route exact path=\"/\">\r\n                    <Auth />\r\n                </Route>\r\n                </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import AppRouter from \"components/Router\";\nimport React, {useEffect, useState} from \"react\";\nimport {authService} from \"fbase\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    // const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\n    const [userObj, setUserObj] = useState(null);\n\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if(user){\n                setUserObj({\n                    displayName: user.displayName,\n                    uid: user.uid,\n                    updateProfile: (args) => user.updateProfile(args)\n                })\n            }\n            else{\n                setUserObj(null);\n            }\n            setInit(true);\n        })\n    }, [])\n\n    const refreshUser = () => {\n        const user = authService.currentUser;\n\n        setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            updateProfile: (args) => user.updateProfile(args)\n        });\n    };\n\n\n\n    return (\n        <>\n            {init ? <AppRouter refreshUser={refreshUser} userObj={userObj} isLoggedIn={Boolean(userObj)} /> : \"Initializing\"}\n\n        </>\n    ) ;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n// import firebase from \"fbase\";\nimport \"styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}